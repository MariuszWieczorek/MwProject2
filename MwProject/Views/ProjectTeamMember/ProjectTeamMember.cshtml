@model MwProject.Core.ViewModels.ProjectTeamMemberViewModel
@*
    Okno do edycji informacji technicznych przypisanych do projektu
    Wywołane z okna projektu
*@

@{
    ViewBag.Title = Model.Heading;
}

<!-- Nagłówek -->
<div class="row">
    <div class="col-10">
        <h1 class="mb-3 mt-4 display-4">
            @Model.Heading
        </h1>
    </div>

    <div class="col-2">
        <div class="mt-2 mb-4 text-muted">
            <img src="@Url.Content("~/images/single-document.webp")" style="width: 100px;" />
        </div>
    </div>
</div>


<div class="row">
    <div class="col-12 mt-3 mb-2  pb-3 border rounded bg-light">
        <!-- po submit wywoła się metoda ProjectTeamMember w kontrolerze ProjectTeamMember typu HttpPost -->
        @using (Html.BeginForm("ProjectTeamMember", "ProjectTeamMember"))
        {
            @Html.AntiForgeryToken()

            <!-- Wyświetlenie podsumowania walidacji-->
            @Html.ValidationSummary()

            if (Model.ProjectTeamMember.Id == 0)
            {
                <p class="alert alert-info mb-4 mt-4">Wszystkie pola są <strong>wymagane</strong> </p>
            }

            @Html.HiddenFor(x => x.ProjectTeamMember.Id)
            @Html.HiddenFor(x => x.ProjectTeamMember.ProjectId)


            <div class="form-group mb-3">
                @Html.LabelFor(x => x.ProjectTeamMember.OrdinalNumber)
                @Html.TextBoxFor(x => x.ProjectTeamMember.OrdinalNumber,
                new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ProjectTeamMember.OrdinalNumber)
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(x => x.ProjectTeamMember.UserId)
                @Html.DropDownListFor(x => x.ProjectTeamMember.UserId,
               new SelectList(Model.ApplicationUsers, "Id", "UserName"),
               "--- Wybierz członka zespołu ---",
               new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(x => x.ProjectTeamMember.UserId)
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(x => x.ProjectTeamMember.Description)
                @Html.TextAreaFor(x => x.ProjectTeamMember.Description, 10, 40,
               new { @class = "form-control" })
            </div>

            <button class="btn btn-primary mt-3" type="submit">
                Zapisz
            </button>

            <button type="button" class="btn btn-secondary mt-3"
                    onclick='window.location.href = "@Url.Action("Project","Project", new { id = Model.ProjectTeamMember.ProjectId, tab = "team" })"'>
                wstecz
            </button>
        }
    </div>
</div>

@section scripts
{
    <script type="text/javascript">

        $(document).ready(function () {

            // w formatowaniu ma być przecinek, a nie kropka
            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        });

    </script>
}

