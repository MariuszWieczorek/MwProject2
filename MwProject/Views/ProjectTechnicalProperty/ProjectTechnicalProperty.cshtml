@model MwProject.Core.ViewModels.ProjectTechnicalPropertyViewModel
@*
    Okno do edycji informacji technicznych przypisanych do projektu
    Wywołane z okna projektu
*@

@{
    ViewBag.Title = Model.Heading;
}

<!-- Nagłówek -->
<div class="row">
    <div class="col-10">
        <h1 class="mb-3 mt-4 display-4">
            @Model.Heading
        </h1>
    </div>

    <div class="col-2">
        <div class="mt-2 mb-4 text-muted">
            <img src="@Url.Content("~/images/single-document.webp")" style="width: 100px;" />
        </div>
    </div>
</div>


<div class="row">
    <div class="col-12 mt-3 mb-2  pb-3 border rounded bg-light">
        <!-- po submit wywoła się metoda Calculation w kontrolerze Calculation typu HttpPost -->
        @using (Html.BeginForm("ProjectTechnicalProperty", "ProjectTechnicalProperty"))
        {
            @Html.AntiForgeryToken()

            <!-- Wyświetlenie podsumowania walidacji-->
            @Html.ValidationSummary()

            if (Model.ProjectTechnicalProperty.Id == 0)
            {
                <p class="alert alert-info mb-4 mt-4">Wszystkie pola są <strong>wymagane</strong> </p>
            }

            @Html.HiddenFor(x => x.ProjectTechnicalProperty.Id)
            @Html.HiddenFor(x => x.ProjectTechnicalProperty.ProjectId)


            <div class="form-group mb-3">
                @Html.LabelFor(x => x.ProjectTechnicalProperty.TechnicalPropertyId)
                @Html.DropDownListFor(x => x.ProjectTechnicalProperty.TechnicalPropertyId,
               new SelectList(Model.TechnicalProperties, "Id", "Name"),
               "--- Wybierz parametr techniczny ---",
               new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessageFor(x => x.ProjectTechnicalProperty.TechnicalPropertyId)
            </div>

            <div class="form-check mb-3 col-6">

                <br>

                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(x => x.ProjectTechnicalProperty.YesNo, "1",
                   new { @class = "form-check-input" })

                    <label class="form-check-label" for="exampleRadios1"> TAK </label>
                </div>

                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(x => x.ProjectTechnicalProperty.YesNo, "2",
                   new { @class = "form-check-input" })

                    <label class="form-check-label" for="exampleRadios1"> NIE </label>
                </div>

                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(x => x.ProjectTechnicalProperty.YesNo, "0",
                   new { @class = "form-check-input" })

                    <label class="form-check-label" for="exampleRadios1">  </label>
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(x => x.ProjectTechnicalProperty.Comment)
                @Html.TextAreaFor(x => x.ProjectTechnicalProperty.Comment,
               new { @class = "form-control" })
            </div>
            

            @*
            <div class="row">
                <div class="form-group mb-3 col-6">
                    @Html.LabelFor(x => x.ProjectTechnicalProperty.Value)
                    @Html.TextBoxFor(x => x.ProjectTechnicalProperty.Value,
                         new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.ProjectTechnicalProperty.Value)
                </div>

                <div class="form-check form-switch mb-5 col-6">
                    <br>
                    @Html.CheckBoxFor(x => x.ProjectTechnicalProperty.ShowValue, new { @class = "form-check-input" })
                    @Html.LabelFor(x => x.ProjectTechnicalProperty.ShowValue, new { @class = "form-check-label" })
                    @Html.ValidationMessageFor(x => x.ProjectTechnicalProperty.ShowValue)
                </div>
            </div>
            *@
          

            <button class="btn btn-primary mt-3" type="submit">
                Zapisz
            </button>

            <button type="button" class="btn btn-secondary mt-3"
                    onclick='window.location.href = "@Url.Action("Project","Project", new { id = Model.ProjectTechnicalProperty.ProjectId, tab = "technical" })"'>
                wstecz
            </button>
        }
    </div>
</div>

@section scripts
{
    <script type="text/javascript">

        $(document).ready(function () {

            // w formatowaniu ma być przecinek, a nie kropka
            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        });

    </script>
}

