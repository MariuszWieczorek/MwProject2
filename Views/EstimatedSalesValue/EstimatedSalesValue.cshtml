@model MwProject.Core.ViewModels.EstimatedSalesValueViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h2>@Model.Heading</h2>

<h2>@Model.EstimatedSalesValue.ProjectId</h2>

<div class="row">
    <div class="col-lg-6">
        <!-- po submit wywoła się metoda Calculation w kontrolerze Calculation typu HttpPost -->
        @using (Html.BeginForm("EstimatedSalesValue", "EstimatedSalesValue"))
        {
            @Html.AntiForgeryToken()

            <!-- Wyświetlenie podsumowania walidacji-->
            @Html.ValidationSummary()

            if (Model.EstimatedSalesValue.Id == 0)
            {
                <p class="alert alert-info mb-4 mt-4">Wszystkie pola są <strong>wymagane</strong> </p>
            }

            @Html.HiddenFor(x => x.EstimatedSalesValue.Id)
            @Html.HiddenFor(x => x.EstimatedSalesValue.ProjectId)


            <div class="form-group mb-3">
                @Html.LabelFor(x => x.EstimatedSalesValue.Year)
                @Html.TextBoxFor(x => x.EstimatedSalesValue.Year,
                new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EstimatedSalesValue.Year)
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(x => x.EstimatedSalesValue.Qty)
                @Html.TextBoxFor(x => x.EstimatedSalesValue.Qty,
                new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EstimatedSalesValue.Qty)
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(x => x.EstimatedSalesValue.Price)
                @Html.TextBoxFor(x => x.EstimatedSalesValue.Price,
                new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EstimatedSalesValue.Price)
            </div>


            <button class="btn btn-primary btn-lg mb-5" type="submit">
                Zapisz
            </button>
        }
    </div>


</div>

@section scripts
{
    <script type="text/javascript">

        $(document).ready(function () {

            // w formatowaniu ma być przecinek, a nie kropka
            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        });

    </script>
}

