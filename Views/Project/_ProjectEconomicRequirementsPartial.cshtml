@model MwProject.Core.ViewModels.ProjectViewModel
@*
    Widok częściowy z listą wymagań Economic powiązanych z projektem
    do umieszczenia na widoku projektu
*@

@{
    int typeOfRequirement = 1;
    var requirements = Model.Project.ProjectRequirements.Where(x => x.Requirement.Type == typeOfRequirement);
    bool canEdit = !Model.Project.IsEconomicRequirementsConfirmed;
    bool canWithdrawAcceptation = !Model.Project.IsAccepted;
}

<div class="m-2">

    <div class="row">
        <div class="col-12">
            <div class="mt-2 mb-4 text-muted">
                <h4>Informacje Ekonomiczne</h4>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            @if (canEdit)
            {
                <button class="btn btn-outline-primary btn-sm "
                        onclick="addProjectEconomicRequirements('@Model.Project.Id',this)">
                    Wczytaj
                </button>

                <button class="btn btn-outline-success btn-sm"
                        onclick='window.location.href = "@Url.Action("ProjectRequirement", "ProjectRequirement", new { projectId = Model.Project.Id, type = typeOfRequirement })"'>
                    Dodaj
                </button>

                <button class="btn btn-outline-warning btn-sm"
                        onclick="confirmEconomicRequirements('@Model.Project.Id',this)">
                    Potwierdź
                </button>

                <button class="btn btn-outline-primary btn-sm mt-3 mb-3"
                        onclick='window.location.href = "@Url.Action("ProjectRequirements","ProjectRequirement", new { projectId = Model.Project.Id, type = typeOfRequirement })"'>
                    Edytuj w osobnym oknie
                </button>
            }
            else
            {
                @if (canWithdrawAcceptation)
                {
                    <button class="btn btn-outline-warning btn-sm"
                            onclick="withdrawConfirmationOfEconomicRequirements('@Model.Project.Id',this)">
                        Wycofaj Potwierdzenie
                    </button>
                }
            }
        </div>
    </div>

    <div class="row">
        <div class="col-12 mt-2">
            @if (requirements != null && requirements.Any())
            {

                <table class="table table-sm table-hover  mt-3 mb-5">
                    
                    <thead class="table-secondary" style="display:none;">
                        <tr>
                            <th scope="col">parametr</th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var position in requirements)
                        {
                            <tr>
                                <td class="text-muted" style="width:300px">
                                    @if (canEdit)
                                    {
                                        <a class="font-weight-bold"
                                           href="@Url.Action("ProjectRequirement", "ProjectRequirement", new { projectId = position.ProjectId, id = position.Id, type = typeOfRequirement })">
                                            <strong>
                                                @position.Requirement.Name
                                            </strong>
                                        </a>
                                    }
                                    else
                                    {
                                        <strong>
                                            @position.Requirement.Name
                                        </strong>
                                    }
                                </td>

                                @{
                                    string exist;
                                    switch (position.YesNo)
                                    {
                                        case 1:
                                            exist = "TAK";
                                            break;
                                        case 2:
                                            exist = "NIE";
                                            break;
                                        default:
                                            exist = "";
                                            break;
                                    }

                                    string value = position.ShowValue == true ? position.Value.ToString() : "";
                                }

                                <td>@exist</td>
                                <td>@value</td>
                                <td>@position.Comment</td>
                                <td align="right">
                                    @if (canEdit)
                                    {
                                        <button class="btn btn-outline-danger btn-sm"
                                                onclick="deleteProjectRequirement('@position.ProjectId','@position.Id',this)">
                                            Usuń
                                        </button>
                                    }
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            }

        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
                                                                      // wszystkie skrypty w widoku z którego został wywołany ten widok częściowy
                                                                      // deleteProjectRequirement()
    </script>
}
