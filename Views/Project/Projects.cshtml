@model MwProject.Core.ViewModels.ProjectsViewModel

@{
    ViewBag.Title = "Projekty";
}

<h1 class="mb-3 mt-2 display-4">Lista Projektów</h1>

<button class="btn btn-primary btn-lg mt-3 mb-3"
        onclick='window.location.href = "@Url.Action("Project","Project")"'>
    Dodaj
</button>

    @*  Formularz zgodny z bootstrap 5.0
        Formularz bez helpera beginform
        ponieważ ten formularz będziemy submit’ować w inny sposób.
        Tak, aby po kliknięci przycisku submit
        nie przeładowywała się strona, tylko odświeżała tabelka z projektami.
    *@


<div class="shadow-sm p-3 mb-5 bg-body rounded">
    <form id="filterForm" class="row gy-2 gx-3 align-items-center">
        <div class="col-auto ">
            @Html.TextBoxFor(x => x.ProjectsFilter.Title,
              new { @class = "form-control", placeholder = "Tytuł" })
        </div>

        <div class="col-auto">
            @Html.DropDownListFor(x => x.ProjectsFilter.CategoryId,
               new SelectList(Model.Categories, "Id", "Name"),
               " -- wszystkie kategorie -- ",
               new { @class = "form-control" })
        </div>
        <div class="col-auto">
            <div class="form-check">
                @Html.CheckBoxFor(x => x.ProjectsFilter.IsExecuted,
                   new { @class = "form-check-label" }
                   )
                @Html.LabelFor(x => x.ProjectsFilter.IsExecuted)
            </div>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-warning">Filtruj</button>
        </div>
    </form>
</div>
    @* tabela z listą projektów *@
    <div>
        @await Html.PartialAsync("_ProjectsTablePartial.cshtml", Model)
    </div>


    @section scripts
{
        <script type="text/javascript">
        // ------------------------------------------------------------------------------------------------------
        // funkcja zostanie wywołana gdy zostanie załadowany już cały widok

        $(document).ready(function () {
        // najpierw zaznaczamy formularz o id = filterForm
        // chcemy aby po kliknięci przycisku zostałą wywołana taka funkcja
        // a chcemy, żeby za pomocą ajax'a została wywołana odpowiednia funkcja z kontrolera
        // przesyłamy zserializowane dane z tego formularza
        // jeżeli zakończone sukcesem, to zostanie zwrócona tabelka z widoku częściowego

            $('#filterForm').submit(function () {
                $.ajax({
                    type: 'POST',
                    url: "@Url.Action("Projects","Project")",
                    data: $(this).serialize(),
                    success: function (data) {
                        $('#projectsTable').html(data);
                    },
                    error: function (data) {
                        alert(data.message + ' filter ')
                    },
                    dataType: "html"
                });
                // return false konieczne aby nie wykonał się jeszcze raz submit
                return false;
            });
        });

        // ------------------------------------------------------------------------------------------------------

        function deleteProject(id, btn) {
            if (!confirm("Czy na pewno chcesz usunąć projekt ?"))
                return;

            $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteProject","Project")",
                data: {
                    id: id
                },
                success: function (data) {
                    if (data.success) {
                        // usuwanie z tabeli w html'u
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);
                    }
                    else {
                        alert(data.message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.message + ' Nie znaleziono Akcji DeleteProject w kontrolerze Project');
                },
                dataType: 'json'

            });
        }
       // ------------------------------------------------------------------------------------------------------


        </script>
    }
