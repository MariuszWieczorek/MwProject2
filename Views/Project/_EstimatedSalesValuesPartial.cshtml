@model IEnumerable<MwProject.Core.Models.Domains.EstimatedSalesValue>

@* Widok częściowy z kalkulacjami powiązanymi z projektem *@

<div class="row">
    <h2>Przewidywana Sprzedaż</h2>

    <table class="table table-hover table-striped mt-3 mb-5">
        <thead>
            <tr>
                <th scope="col">Rok</th>
                <th scope="col">Ilość</th>
                <th scope="col">Cena</th>
                <th scope="col">Wartość</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var position in Model)
                {
                    <tr>
                        <td>
                            <a class="font-weight-bold"
                               href="@Url.Action("EstimatedSalesValue", "EstimatedSalesValue", new { projectId = position.ProjectId, Id = position.Id })">
                                @position.Year
                            </a>
                        </td>
                        <td>@position.Qty.ToString("N")</td>
                        <td>@position.Price zł</td>
                        @{decimal value = Math.Round(position.Qty * position.Price, 2);}
                        <td>@value.ToString("c")</td>
                        <td>
                            <button class="btn btn-danger btn-sm"
                                    onclick="deleteEstimatedSalesValue('@position.ProjectId','@position.Id',this)">
                                Usuń
                            </button>
                        </td>
                    </tr>
                            }

                <tr>
                    <td><strong>średnia</strong></td>
                    @{decimal averageQty = 0;}
                    @{decimal averagePrice = 0;}
                    @{decimal averageValue = 0;}


                    @{averageQty = Math.Round(Model.Average(x => x.Qty), 2);}

                    @{decimal totalSales = Math.Round(Model.Sum(x => x.Price * x.Qty), 2);}
                    @{int numberOfYears = Model.Count();}

                    @if (averageQty != 0)
                    {
                        averagePrice = Math.Round(totalSales / averageQty, 2);
                    }

                    @if (numberOfYears != 0)
                    {
                        averageValue = Math.Round(totalSales / numberOfYears, 2);
                    }
                    <td>@averageQty</td>
                    <td> </td>
                    <td>@averageValue.ToString("c") </td>
                    <td> </td>
                </tr>
            }
            </tbody>
    </table>
</div>

@section scripts
{
    <script type="text/javascript">
      // wszystkie skrypty w widoku z którego został wywołany ten widok częściowy
      // deleteEstimatedSalesValue()
    </script>
}