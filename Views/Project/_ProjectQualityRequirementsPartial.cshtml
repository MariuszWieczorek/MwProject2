@model MwProject.Core.ViewModels.ProjectViewModel
@* 
    Widok częściowy z listą wymagań Quality powiązanych z projektem
    do umieszczenia na widoku projektu
*@

@{
    int typeOfRequirement = 2;
    var requirements = Model.Project.ProjectRequirements.Where(x => x.Requirement.Type == typeOfRequirement);
    bool canEdit = !Model.Project.IsQualityRequirementsConfirmed && Model.CurrentUser.CanEditQualityRequirements;
    bool canWithdrawAcceptation = !Model.Project.IsAccepted;
}

<div class="m-2">

    <div class="row">

        <div class="col-11">
            <div class="mt-2 mb-4 text-muted">
                <h2>Informacje Jakościowe</h2>
            </div>
        </div>

        <div class="col-1">
            <div class="mt-2 mb-4 text-muted">
                <img src="@Url.Content("~/images/quality.png")" style="width: 50px;" />
            </div>
        </div>


    </div>

    <div class="row">
        <div class="col-12">
            @if (canEdit)
            {
                <button class="btn btn-outline-primary btn-sm "
                        onclick="addProjectQualityRequirements('@Model.Project.Id',this)">
                    Wczytaj
                </button>

                <button class="btn btn-outline-success btn-sm"
                        onclick='window.location.href = "@Url.Action("ProjectRequirement","ProjectRequirement",new { projectId = Model.Project.Id, type = typeOfRequirement })"'>
                    Dodaj
                </button>

                <button class="btn btn-outline-warning btn-sm"
                        onclick="confirmQualityRequirements('@Model.Project.Id',this)">
                    Potwierdź
                </button>
                
                @*
                <button class="btn btn-outline-primary btn-sm mt-3 mb-3"
                        onclick='window.location.href = "@Url.Action("ProjectRequirements","ProjectRequirement", new { projectId = Model.Project.Id, type = typeOfRequirement })"'>
                    Edytuj w osobnym oknie
                </button>
                    *@
            }
            else
            {
                @if (canWithdrawAcceptation)
                {
                    <button class="btn btn-outline-warning btn-sm"
                            onclick="withdrawConfirmationOfQualityRequirements('@Model.Project.Id',this)">
                        Wycofaj Potwierdzenie
                    </button>
                }
            }


        </div>
    </div>

    <div class="col-12 mt-2">
        @if (requirements != null && requirements.Any())
        {

        <table class="table table-sm table-hover mt-3 mb-5">
            
            <thead class="table-secondary">
                <tr>
                    <th scope="col" style="width:400px">Parametr </th>
                    <th scope="col" style="width:60px"> T/N </th>
                    <th scope="col"> Komentarz </th>
                    <th scope="col"> Wartość </th>
                    <th scope="col"></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var position in requirements)
                {
                <tr>
                    <td class="text-muted">
                        @if (canEdit)
                        {
                            <a class="font-weight-bold"
                               href="@Url.Action("ProjectRequirement", "ProjectRequirement", new { projectId = position.ProjectId, id = position.Id, type = typeOfRequirement })">
                                <strong>
                                    @position.Requirement.Name
                                </strong>
                            </a>
                        }
                        else
                        {
                            <strong>
                                @position.Requirement.Name
                            </strong>
                        }
                    </td>

                    @{
                        string exist;
                        switch (position.YesNo)
                        {
                            case 1:
                                exist = "TAK";
                                break;
                            case 2:
                                exist = "NIE";
                                break;
                            default:
                                exist = "";
                                break;
                        }

                        
                    }

                    <td class="text-muted"><strong>@exist</strong></td>

                    <td>@position.Comment</td>

                    <td class="text-muted">
                        @if (position.ShowValue)
                        {
                            <strong>
                                @position.Value.ToString("n")
                            </strong>
                        }
                    </td>

                    <td align="right">
                        @if (canEdit)
                        {
                            <button class="btn btn-outline-danger btn-sm"
                                    onclick="deleteProjectRequirement('@position.ProjectId','@position.Id',this)">
                                Usuń
                            </button>
                        }

                    </td>
                </tr>
                }

            </tbody>
        </table>
        }
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
                                                  // wszystkie skrypty w widoku z którego został wywołany ten widok częściowy
                                                  // deleteProjectRequirement()
    </script>
}
