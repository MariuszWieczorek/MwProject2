@model MwProject.Core.ViewModels.ProjectViewModel

@{
    ViewBag.Title = Model.Heading;
    bool NewProject = (Model.Project.Id == 0);
}

<h2>@Model.Heading</h2>

@if (Model.Project.Id != 0)
{
    <!--
        <button class="btn btn-secondary mb-3"
                onclick="generatePdf()">
            Generuj PDF
        </button>

        <button class="btn btn-secondary mb-3" onclick="printProject()">
            Drukuj
        </button>
     -->
    <button id="printButton" class="btn btn-secondary mb-3">
        Drukuj
    </button>

    @if (Model.Project.IsCalculationConfirmed && Model.Project.IsEstimatedSalesConfirmed)
    {
        @if (Model.Project.IsAccepted == false)
        {
            <button class="btn btn-lg btn-warning mb-3" onclick="acceptProject()">
                <strong>Akceptuj Projekt</strong>
            </button>
        }
        else
        {
            <button class="btn btn-warning mb-3" onclick="withdrawProjectAcceptance()">
                Wycofaj Akceptacje 
            </button>
        }
    }
}

<div class="row mb-2">
    <div class="col-12 border rounded bg-light">

        <div class="row g-0">
            <div class="col-12 mt-2 mb-2">
                <h4>Status Projektu</h4>
            </div>
        </div>

        @if (Model.Project.Id != 0)
        {
            <div class="mt-3 mb-5">
                @await Html.PartialAsync("_ConfirmationsPartial", Model)
            </div>
        }
    </div>
</div>

<div class="row ">

    <div class="col-12 border rounded bg-light">

        <div class="row g-0">
            <div class="col-12 mt-1">
                <h4>Dane podstawowe</h4>
            </div>
        </div>

        @using (Html.BeginForm("Project", "Project", FormMethod.Post, new { id = "myform" }))
        {
            @Html.AntiForgeryToken()

            <!-- Wyświetlenie podsumowania walidacji-->
            @Html.ValidationSummary()

            if (Model.Project.Id == 0)
            {
                <p class="alert alert-info mb-4 mt-4">Pola tytuł i termin są <strong>wymagane</strong> </p>
            }

            @Html.HiddenFor(x => x.Project.Id)
            @Html.HiddenFor(x => x.Project.UserId)

            <!--Podział głównych danych formularza na dwie kolumny-->
            <div class="row g-0">
                <!-- Pierwsza kolumna formularza -->
                <div class="col-lg-6">

                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Project.CategoryId)
                        @Html.LabelFor(x => x.Project.Value)


                        @if (NewProject == false)
                        {
                            @Html.DropDownListFor(x => x.Project.CategoryId,
                                    new SelectList(Model.Categories, "Id", "Name"),
                                    "--- Wybierz kategorię projektu ---",
                                    new { @class = "form-control", autofocus = "autofocus", @disabled = "disabled" })
                        }
                        else
                        {
                            @Html.DropDownListFor(x => x.Project.CategoryId,
                                new SelectList(Model.Categories, "Id", "Name"),
                                "--- Wybierz kategorię projektu ---",
                                new { @class = "form-control", autofocus = "autofocus" })
                        }

                        @Html.ValidationMessageFor(x => x.Project.CategoryId)
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Project.ProductGroupId)


                        @if (NewProject == false)
                        {
                            @Html.DropDownListFor(x => x.Project.ProductGroupId,
                                            new SelectList(Model.ProductGroups, "Id", "Name"),
                                            "--- Wybierz kategorię ---",
                                            new { @class = "form-control", autofocus = "autofocus", @disabled = "disabled" })
                        }
                        else
                        {
                            @Html.DropDownListFor(x => x.Project.ProductGroupId,
                                           new SelectList(Model.ProductGroups, "Id", "Name"),
                                           "--- Wybierz kategorię ---",
                                           new { @class = "form-control", autofocus = "autofocus" })
                        }

                        @Html.ValidationMessageFor(x => x.Project.ProductGroupId)
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Project.Number)
                        @Html.TextBoxFor(x => x.Project.Number,
                       new { @class = "form-control", autofocus = "autofocus", Style = "background:#eeffee; font-weight:bold" })
                        @Html.ValidationMessageFor(x => x.Project.Number)
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Project.Title)
                        @Html.TextAreaFor(x => x.Project.Title,
                       new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Project.Title)
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Project.Description)
                        @Html.TextAreaFor(x => x.Project.Description,
                       new { @class = "form-control" })
                    </div>
                </div>

                <!-- Druga kolumna formularza -->
                <div class="col-lg-5 offset-lg-1">
                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Project.InitiatedBy)
                        @Html.TextBoxFor(x => x.Project.InitiatedBy,
                       new { @class = "form-control", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(x => x.Project.InitiatedBy)
                    </div>

                    <!-- Data utworzenie wniosku -->
                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Project.CreatedDate)
                        @Html.TextBoxFor(x => x.Project.CreatedDate,
                         "{0:dd-MM-yyyy}",
                        new
                        {
                            @class = "form-control",
                            @id = "CreatedDate",
                            autocomplete = "off"
                        })
                        @Html.ValidationMessageFor(x => x.Project.CreatedDate)
                    </div>

                    <!-- Oczekiwany termin realizacji -->
                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Project.Term)
                        @Html.TextBoxFor(x => x.Project.Term,
                         "{0:dd-MM-yyyy}",
                        new
                        {
                            @class = "form-control",
                            @id = "Term",
                            autocomplete = "off"
                        })
                        @Html.ValidationMessageFor(x => x.Project.Term)
                    </div>

                    <div class="form-check form-switch mb-3">
                        @Html.CheckBoxFor(x => x.Project.NewProduct, new { @class = "form-check-input" })
                        @Html.LabelFor(x => x.Project.NewProduct, new { @class = "form-check-label" })
                        @Html.ValidationMessageFor(x => x.Project.NewProduct)
                    </div>
                    @*
                        <div class="form-group mb-3">
                            @Html.LabelFor(x => x.Project.Value)
                            @Html.TextBoxFor(x => x.Project.Value,
                            new { @class = "form-control", id = "Value", name = "Value" })
                            @Html.ValidationMessageFor(x => x.Project.Value)
                        </div>
                    *@
                </div>
            </div>

            @if (Model.Project.IsAccepted == false)
            {
                <button class="btn btn-primary btn-lg mb-5" type="submit">
                    Zapisz
                </button>
            }



        }
    </div>

</div>

<div class="row ">


        @if (Model.Project.Id != 0)
        {


            <div class="col-12 mt-3 mb-2 border rounded bg-light">
                @await Html.PartialAsync("_ProjectTechnicalPropertiesPartial", Model)
            </div>

            <div class="col-12 mt-3 mb-2 border rounded bg-light">
                @await Html.PartialAsync("_ProjectEconomicRequirementsPartial", Model)
            </div>

            <div class="col-12 mt-3 mb-2 border rounded bg-light">
                @await Html.PartialAsync("_ProjectQualityRequirementsPartial", Model)
            </div>

            <div class="col-12 mt-3 mb-2 border rounded bg-light">
                @await Html.PartialAsync("_CalculationsPartial", Model)
            </div>

            <div class="col-12 mt-3 mb-2 border rounded bg-light">
                @await Html.PartialAsync("_EstimatedSalesValuesPartial", Model)
            </div>

        }

</div>

    @section scripts
{
        <script type="text/javascript">
       // Uwagi dotyczące wywoływania ajax'a
       // gdy akcja w kontrolerze zwraca błąd sprawdzić wielkość liter w zmiennych success, message
       // gdy w ogóle nie wykonuje się ajax, nie mamy żadnego z umieszczonych wewnątrz alertów
       // to sprawdzić parametry przekazywane w sekcji data czy są zgodne z parametrami przekazanymi
       // do funkcji

       // ---------------------------------------------------------------------------------------------

        $(document).ready(function () {

            $('#Term').datepicker({
                format: "dd-mm-yyyy",
                language: "pl",
                multidate: false,
                autoclose: true,
                todayHighlight: true,
                forceParse: false
            });

            $('#CreatedDate').datepicker({
                format: "dd-mm-yyyy",
                language: "pl",
                multidate: false,
                autoclose: true,
                todayHighlight: true,
                forceParse: false
            });

            // format daty
            $.validator.methods.date = function (value, element) {
                var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
                var isFirefox = /Firefox/.test(navigator.userAgent);
                if (isChrome || isFirefox) {
                    var d = new Date();
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                } else {
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                }
            }

        });

        // ---------------------------------------------------------------------------------------------

       /*
        $.validator.setDefaults({
            debug: true,
            success: "valid"
        });
       */

        $("#myform").validate({
            rules: {
                Value: {
                    required: true,
                    number: true
                }
            }
        });

        // ------

        function printProject() {
            var url = '@Url.Action("ProjectRaport", "Print")' + '?id=' + '@Model.Project.Id';

            var url = '@Url.Action("ProjectRaport", "Print", new { id = Model.Project.Id })';

            var myWindow = window.open(url, '', 'width=800,height=600');

            myWindow.onload = function () {
                myWindow.print();
                myWindow.onafterprint = function () {
                    myWindow.close();
                };
            };
        }
        // -------------------------------------------------------------------------------------
        $("#printButton").click(function () {
             window.open("@Url.Action("ProjectRaport", "Print",new {id = Model.Project.Id })", "_blank",
            "menubar=no, toolbar=no, resizable=no, top=100, left=200, width=1000, height=800");
        });

        // -------------------------------------------------------------------------------------
        // Generowanie PDF'a
        function generatePdf() {

            if (!confirm("Czy generujemy PDF ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("InvoiceToPdf", "Print")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.Success) {

                        window.location = '@Url.Action("DownloadInvoicePdf", "Print")'
                            + '?fileGuid=' + data.FileGuid + '&fileName=' + data.FileName;

                    }
                    else {
                        alert(data.Message + ' x');
                    }
                },
                error: function (data) {
                        alert(data.Message);
                },
                dataType: 'json',
                cache: false

                });

        }

        // ------------------------------------------------------------------------------------------------
        // Akceptacja Projektu
        function acceptProject() {

            if (!confirm("Czy zaakceptować projekt ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("AcceptProject", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // --------------------------------------------------------------------------------------------
        // WithdrawProjectAcceptance
        function withdrawProjectAcceptance() {

            if (!confirm("Czy wycofać akceptację projektu ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("WithdrawProjectAcceptance", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }

        // --------------------------------------------------------------------------------------------

            function deleteEstimatedSalesValue(projectId,id, btn) {
            if (!confirm("Czy na pewno chcesz usunąć przewidywaną sprzedaż ?"))
                return;

           $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteEstimatedSalesValue", "EstimatedSalesValue")",
                 data: {
                     projectId: projectId,
                     id: id
                },
                success: function (data) {
                    if (data.success) {
                        // usuwanie z tabeli w html'u
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);

                    }
                    else {
                        alert(data.message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json'

                });

            }
         // ------------------------------------------------------------------------------------------------
        function deleteCalculation(projectId,id, btn) {
            if (!confirm("Czy na pewno chcesz usunąć kalkulację ?"))
                return;

           $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteCalculation", "Calculation")",
                 data: {
                     projectId: projectId,
                     id: id
                },
                success: function (data) {
                    if (data.success) {
                        // usuwanie z tabeli w html'u
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);

                    }
                    else {
                        alert(data.message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json'

                });

            }


         // ------------------------------------------------------------------------------------------------

        function deleteProjectRequirement(projectId,id, btn) {
            if (!confirm("Czy na pewno chcesz wymaganie ?"))
                return;

           $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteProjectRequirement", "ProjectRequirement")",
                 data: {
                     projectId: projectId,
                     id: id
                },
                success: function (data) {
                    if (data.success) {
                        // usuwanie z tabeli w html'u
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);

                    }
                    else {
                        alert(data.message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json'

                });

            }


         // ------------------------------------------------------------------------------------------------

        // ------------------------------------------------------------------------------------------------

        function deleteProjectTechnicalProperty(projectId,id, btn) {
            if (!confirm("Czy na pewno chcesz usunąć parametr techniczny ?"))
                return;

           $.ajax({
                type: 'POST',
                url: "@Url.Action("DeleteProjectTechnicalProperty", "ProjectTechnicalProperty")",
                 data: {
                     projectId: projectId,
                     id: id
                },
                success: function (data) {
                    if (data.success) {
                        // usuwanie z tabeli w html'u
                        var row = btn.parentNode.parentNode;
                        row.parentNode.removeChild(row);

                    }
                    else {
                        alert(data.message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json'

                });

            }


         // ------------------------------------------------------------------------------------------------
            //addProjectTechnicalProperties
            function addProjectTechnicalProperties(projectId, btn) {
            if (!confirm("Czy na pewno wczytać parametry techniczne ?"))
                return;

           $.ajax({
                type: 'POST',
                url: "@Url.Action("AddTechnicalProperties", "Project")",
                 data: {
                     projectId: projectId
                },
                success: function (data) {
                    if (data.success) {
                        // odświeżenie strony
                        location.reload(true);

                    }
                    else {
                        alert(data.message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json'

                });

            }

        // ------------------------------------------------------------------------------------------------
            //addProjectTechnicalProperties
            function addProjectQualityRequirements(projectId, btn) {
            if (!confirm("Czy na pewno wczytać wymagania jakościowe ?"))
                return;

           $.ajax({
                type: 'POST',
                url: "@Url.Action("AddQualityRequirements", "Project")",
                 data: {
                     projectId: projectId
                },
                success: function (data) {
                    if (data.success) {
                        // odświeżenie strony
                        location.reload(true);

                    }
                    else {
                        alert(data.message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json'

                });

            }
                // ------------------------------------------------------------------------------------------------
            //addProjectTechnicalProperties
            function addProjectEconomicRequirements(projectId, btn) {
            if (!confirm("Czy na pewno wczytać wymagania ekonomiczne ?"))
                return;

           $.ajax({
                type: 'POST',
                url: "@Url.Action("AddEconomicRequirements", "Project")",
                 data: {
                     projectId: projectId
                },
                success: function (data) {
                    if (data.success) {
                        // odświeżenie strony
                        location.reload(true);
                    }
                    else {
                        alert(data.message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json'

                });

            }

         // ------------------------------------------------------------------------------------------------
         // withdrawConfirmationOfCalculation
        function withdrawConfirmationOfCalculation() {

            if (!confirm("Czy wycofać potwierdzenie kalkulacji ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("WithdrawConfirmationOfCalculation", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }

        // ------------------------------------------------------------------------------------------------
         // confirmCalculation
        function confirmCalculation() {

            if (!confirm("Czy potwierdzić kalkulację ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("ConfirmCalculation", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
         // confirmEstimatedSales
        function confirmEstimatedSales() {

            if (!confirm("Czy potwierdzić przewidywaną sprzedaż ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("ConfirmEstimatedSales", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // withdrawConfirmationOfCalculation
        function withdrawConfirmationOfEstimatedSales() {

            if (!confirm("Czy wycofać potwierdzenie przewidywanej sprzedaży ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("WithdrawConfirmationOfEstimatedSales", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // ConfirmProject
        function confirmProject() {

            if (!confirm("Czy potwierdzić projekt ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("ConfirmProject", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }

        // ------------------------------------------------------------------------------------------------
        // WithdrawProjectConfimration
        function WithdrawProjectConfimration() {

            if (!confirm("Czy wycofać potwierdzenie projektu ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("WithdrawProjectConfimration", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // ConfirmQualityRequirements
        function confirmQualityRequirements() {

            if (!confirm("Czy potwierdzić wymagania jakościowe ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("ConfirmQualityRequirements", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // WithdrawConfirmationOfQualityRequirements
        function withdrawConfirmationOfQualityRequirements() {

            if (!confirm("Czy wycofać potwierdzenie wymagań jakościowych ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("WithdrawConfirmationOfQualityRequirements", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // ConfirmEconomicRequirements
        function confirmEconomicRequirements() {

            if (!confirm("Czy potwierdzić wymagania ekonomiczne ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("ConfirmEconomicRequirements", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // WithdrawConfirmationOfEconomicRequirements
        function withdrawConfirmationOfEconomicRequirements() {

            if (!confirm("Czy wycofać potwierdzenie wymagań ekonomicznych ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("WithdrawConfirmationOfEconomicRequirements", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // ConfirmTechnicalProperties
        function confirmTechnicalProperties() {

            if (!confirm("Czy potwierdzić informacje techniczne ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("ConfirmTechnicalProperties", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // WithdrawConfirmationOfTechnicalProperties
        function withdrawConfirmationOfTechnicalProperties() {

            if (!confirm("Czy wycofać potwierdzenie informacji technicznych ?"))
                return;
            // --------------------------------------------
            $.ajax({
                type: 'POST',
                url: "@Url.Action("WithdrawConfirmationOfTechnicalProperties", "Project")",
                 data: {
                     id: '@Model.Project.Id'
                },
                success: function (data) {
                    if (data.success) {

                    // akceptacja - zmiany w widoku
                        location.reload(true);
                    }
                    else {
                        alert(data.Message + ' Akcja w kontrolerze zwróciła błąd');
                    }
                },
                error: function (data) {
                    alert(data.Message + ' Nie znaleziono Akcji w kontrolerze');
                },
                dataType: 'json',
                cache: false

                });

        }
        // ------------------------------------------------------------------------------------------------
        // ------------------------------------------------------------------------------------------------
        </script>
    }

